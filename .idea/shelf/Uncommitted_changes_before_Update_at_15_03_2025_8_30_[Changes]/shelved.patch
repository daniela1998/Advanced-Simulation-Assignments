Index: Celia/model/model_viz.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/model/model_viz.py b/Celia/model/model_viz.py
new file mode 100644
--- /dev/null	(date 1741937908531)
+++ b/Celia/model/model_viz.py	(date 1741937908531)
@@ -0,0 +1,83 @@
+from mesa.visualization.ModularVisualization import ModularServer
+from ContinuousSpace.SimpleContinuousModule import SimpleCanvas
+from model import BangladeshModel
+from components import Source, Sink, Bridge, Link, Intersection, Infra
+
+"""
+Run simulation with Visualization 
+Print output at terminal
+"""
+
+
+# ---------------------------------------------------------------
+def agent_portrayal(agent):
+    """
+    Define the animation methode
+
+    Only circles and rectangles are possible
+    Both can be labelled
+    """
+
+    # define shapes
+    portrayal = {
+        "Shape": "circle",  # rect | circle
+        "Filled": "true",
+        "Color": "Khaki",
+        "r": 2
+        # "w": max(agent.population / 100000 * 4, 4),  # for "Shape": "rect"
+        # "h": max(agent.population / 100000 * 4, 4)
+    }
+
+    if isinstance(agent, Source):
+        if agent.vehicle_generated_flag:
+            portrayal["Color"] = "green"
+        else:
+            portrayal["Color"] = "red"
+
+    elif isinstance(agent, Sink):
+        if agent.vehicle_removed_toggle:
+            portrayal["Color"] = "LightSkyBlue"
+        else:
+            portrayal["Color"] = "LightPink"
+
+    elif isinstance(agent, Link):
+        portrayal["Color"] = "Tan"
+
+    elif isinstance(agent, Intersection):
+        portrayal["Color"] = "DeepPink"
+
+    elif isinstance(agent, Bridge):
+        portrayal["Color"] = "dodgerblue"
+
+    if isinstance(agent, (Source, Sink)):
+        portrayal["r"] = 5
+    elif isinstance(agent, Infra):
+        portrayal["r"] = max(agent.vehicle_count * 4, 2)
+
+    # define text labels
+    if isinstance(agent, Infra) and agent.name != "":
+        portrayal["Text"] = agent.name
+        portrayal["Text_color"] = "DarkSlateGray"
+
+    return portrayal
+
+
+# ---------------------------------------------------------------
+"""
+Launch the animation server 
+Open a browser tab 
+"""
+
+canvas_width = 400
+canvas_height = 400
+
+space = SimpleCanvas(agent_portrayal, canvas_width, canvas_height)
+
+server = ModularServer(BangladeshModel,
+                       [space],
+                       "Transport Model Demo",
+                       {"seed": 1234567})
+
+# The default port
+server.port = 8521
+server.launch()
Index: Celia/model/model_run.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/model/model_run.py b/Celia/model/model_run.py
new file mode 100644
--- /dev/null	(date 1741937908529)
+++ b/Celia/model/model_run.py	(date 1741937908529)
@@ -0,0 +1,25 @@
+from model import BangladeshModel
+
+"""
+    Run simulation
+    Print output at terminal
+"""
+
+# ---------------------------------------------------------------
+
+# run time 5 x 24 hours; 1 tick 1 minute
+run_length = 5 * 24 * 60
+
+# run time 1000 ticks
+# run_length = 1000
+
+seed = 1234567
+
+sim_model = BangladeshModel(seed=seed)
+
+# Check if the seed is set
+print("SEED " + str(sim_model._seed))
+
+# One run with given steps
+for i in range(run_length):
+    sim_model.step()
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fe41554d-9335-4939-9ca3-c4b8601f3435\" name=\"Changes\" comment=\"Exploring file deleted. &#10;Small mistake fixed in visualisation.py\">\r\n      <change afterPath=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model/test_vis.ipynb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/README.md\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/README.md\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/data/demo_100.csv\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model/visualisation.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model/visualisation.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"TypeScript File\" />\r\n        <option value=\"Jupyter Notebook\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {}\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/daniela1998/Advanced-Simulation-Assignments.git&quot;,\r\n    &quot;accountId&quot;: &quot;523617e2-fe91-48ba-b6d6-7c6d47c269eb&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2swHwbR0S8epdryFUIFw3HWTZtl\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.components.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.model.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.model_run.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.model_viz.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.visualisation.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.visualisation2.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Usuario/Desktop/Localisimo/Advanced Simulation/Advanced-Simulation-Assignments/Assignment 2/Celia - EPA133a-G16-A2/data&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [\r\n      &quot;Jupyter&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\Localisimo\\Advanced Simulation\\Advanced-Simulation-Assignments\\Assignment 2\\Celia - EPA133a-G16-A2\\data\" />\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\Localisimo\\Advanced Simulation\\Advanced-Simulation-Assignments\\Assignment 2\\Celia - EPA133a-G16-A2\\model\\celia_model_rachel\" />\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\Localisimo\\Advanced Simulation\\Advanced-Simulation-Assignments\\Assignment 2\\Celia - EPA133a-G16-A2\\model\" />\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\Localisimo\\Advanced Simulation\\Advanced-Simulation-Assignments\\Assignment 2\\Celia - EPA133a-G16-A2\\data\\processed\" />\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\Localisimo\\Advanced Simulation\\Advanced-Simulation-Assignments\\Assignment 2\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\Localisimo\\Advanced Simulation\\Advanced-Simulation-Assignments\\Assignment 2\\EPA133a-G16-A2 FINAL\" />\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\Localisimo\\Advanced Simulation\\Advanced-Simulation-Assignments\\Assignment 2\\EPA133a-G16-A2 FINAL\\data\\raw\" />\r\n      <recent name=\"C:\\Users\\Usuario\\Desktop\\Localisimo\\Advanced Simulation\\Advanced-Simulation-Assignments\\Assignment 2\\Celia - EPA133a-G16-A2\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-PY-243.23654.177\" />\r\n        <option value=\"bundled-python-sdk-91d3a02ef49d-43b77aa2d136-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.23654.177\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fe41554d-9335-4939-9ca3-c4b8601f3435\" name=\"Changes\" comment=\"\" />\r\n      <created>1739359957039</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1739359957039</updated>\r\n      <workItem from=\"1739359958149\" duration=\"1446000\" />\r\n      <workItem from=\"1739366392556\" duration=\"351000\" />\r\n      <workItem from=\"1740825232368\" duration=\"3440000\" />\r\n      <workItem from=\"1740828714736\" duration=\"9884000\" />\r\n      <workItem from=\"1740938104887\" duration=\"5119000\" />\r\n      <workItem from=\"1741011413421\" duration=\"5835000\" />\r\n      <workItem from=\"1741025801450\" duration=\"11790000\" />\r\n      <workItem from=\"1741274455575\" duration=\"10586000\" />\r\n      <workItem from=\"1741349515390\" duration=\"1252000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"move commit test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739366436828</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739366436828</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"move commit test2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739366515590</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739366515590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Added some comments about MESA prior version. This is also to check if my GIT works properly. &#10;&#10;In this code: &#10;self.schedule = BaseScheduler(self)&#10;self.schedule.step()&#10;&#10;Means: (from TPM Modelling)&#10;self.agents.do(&quot;step&quot;)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1740765024274</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1740765024274</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Added some comments about MESA prior version. This is also to check if my GIT works properly. &#10;&#10;In this code: &#10;self.schedule = BaseScheduler(self)&#10;self.schedule.step()&#10;&#10;Means: (from TPM Modelling)&#10;self.agents.do(&quot;step&quot;)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741013083526</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741013083526</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Added some comments about MESA prior version. This is also to check if my GIT works properly. &#10;&#10;In this code: &#10;self.schedule = BaseScheduler(self)&#10;self.schedule.step()&#10;&#10;Means: (from TPM Modelling)&#10;self.agents.do(&quot;step&quot;)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741033898449</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741033898449</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"General README file.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741276939396</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741276939397</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"General README file, update. Added new structure and notebook reference\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741279453033</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741279453033</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"General README file, update. Added new structure and notebook reference\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741279646633</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741279646633</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"General README file, update. Added new structure and notebook reference\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741279711403</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741279711403</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"General README file, update. Added new structure and notebook reference\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741280438779</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741280438779</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Runned the code: got all 9 scenario files in experiment folder. &#10;&#10;Visualisation now is an .py instead of notebook. It outputboxplot2.png&#10;&#10;Added Requirements (check if it is in correct format\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741285207863</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741285207864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Exploring file deleted. &#10;Small mistake fixed in visualisation.py\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741285577273</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741285577273</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"move commit test\" />\r\n    <MESSAGE value=\"move commit test2\" />\r\n    <MESSAGE value=\"Draft version of exporting. There is an error with the truck counter (class attribute of Source). Right now, with the second seed it keep counting vehicles, instead of resetting to 1&#10;&#10;Now: one csv about Vehicle data per seed and one summary csv per scenario with all the important stakeholder data\" />\r\n    <MESSAGE value=\"Draft version of exporting. There is an error with the truck counter (class attribute of Source). Right now, with the second seed it keep counting vehicles, instead of resetting to 1&#10;&#10;Now: one csv about Vehicle data per seed\" />\r\n    <MESSAGE value=\"Draft version of exporting. There is an error with the truck counter (class attribute of Source). Right now, with the second seed it keep counting vehicles, instead of resetting to 1&#10;&#10;Now: one csv about Vehicle data per seed and one summary csv per scenario with all the important stakeholder data\" />\r\n    <MESSAGE value=\"Added some comments about MESA prior version. This is also to check if my GIT works properly. &#10;&#10;In this code: &#10;self.schedule = BaseScheduler(self)&#10;self.schedule.step()&#10;&#10;Means: (from TPM Modelling)&#10;self.agents.do(&quot;step&quot;)\" />\r\n    <MESSAGE value=\"General README file.\" />\r\n    <MESSAGE value=\"General README file, update. Added new structure and notebook reference\" />\r\n    <MESSAGE value=\"Runned the code: got all 9 scenario files in experiment folder. &#10;&#10;Visualisation now is an .py instead of notebook. It outputboxplot2.png&#10;&#10;Added Requirements (check if it is in correct format\" />\r\n    <MESSAGE value=\"Exploring file deleted. &#10;Small mistake fixed in visualisation.py\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Exploring file deleted. &#10;Small mistake fixed in visualisation.py\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Advanced_Simulation_Assignments$model.coverage\" NAME=\"model Coverage Results\" MODIFIED=\"1740944838060\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Assignment 2/Celia - EPA133a-G16-A2/model\" />\r\n    <SUITE FILE_PATH=\"coverage/Advanced_Simulation_Assignments$model_run.coverage\" NAME=\"model_run Coverage Results\" MODIFIED=\"1741281616470\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model\" />\r\n    <SUITE FILE_PATH=\"coverage/Advanced_Simulation_Assignments$components.coverage\" NAME=\"components Coverage Results\" MODIFIED=\"1740943455372\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Assignment 2/Celia - EPA133a-G16-A2/model\" />\r\n    <SUITE FILE_PATH=\"coverage/Advanced_Simulation_Assignments$visualisation.coverage\" NAME=\"visualisation Coverage Results\" MODIFIED=\"1741285930575\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model\" />\r\n    <SUITE FILE_PATH=\"coverage/Advanced_Simulation_Assignments$visualisation2.coverage\" NAME=\"visualisation2 Coverage Results\" MODIFIED=\"1741284410661\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model\" />\r\n    <SUITE FILE_PATH=\"coverage/Advanced_Simulation_Assignments$components_Celia.coverage\" NAME=\"components_Celia Coverage Results\" MODIFIED=\"1740754353310\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2_datacleaning/model\" />\r\n    <SUITE FILE_PATH=\"coverage/Advanced_Simulation_Assignments$model_viz.coverage\" NAME=\"model_viz Coverage Results\" MODIFIED=\"1740837230150\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Assignment 2/Celia - EPA133a-G16-A2/model\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 804ea89d6d4efbc6fffcadcb2b4322a952db85f4)
+++ b/.idea/workspace.xml	(date 1742023797117)
@@ -4,12 +4,22 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="fe41554d-9335-4939-9ca3-c4b8601f3435" name="Changes" comment="Exploring file deleted. &#10;Small mistake fixed in visualisation.py">
-      <change afterPath="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model/test_vis.ipynb" afterDir="false" />
+    <list default="true" id="fe41554d-9335-4939-9ca3-c4b8601f3435" name="Changes" comment="Added reference to the printed function and location or merged_scenarios_summary.csv">
+      <change afterPath="$PROJECT_DIR$/Celia/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/data/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/data/demo-4.csv" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/img/N1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/img/N1N2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/img/demo-4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/model/ContinuousSpace/SimpleContinuousModule.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/model/ContinuousSpace/simple_continuous_canvas.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/model/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/model/components.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/model/model.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/model/model_run.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/model/model_viz.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Celia/testNetworkX.ipynb" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/README.md" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/data/demo_100.csv" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model/visualisation.py" beforeDir="false" afterPath="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model/visualisation.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -19,8 +29,8 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Python Script" />
         <option value="TypeScript File" />
+        <option value="Python Script" />
         <option value="Jupyter Notebook" />
       </list>
     </option>
@@ -47,6 +57,8 @@
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
+    &quot;Python.Test NetworkX (1).executor&quot;: &quot;Run&quot;,
+    &quot;Python.Test NetworkX.executor&quot;: &quot;Run&quot;,
     &quot;Python.components.executor&quot;: &quot;Run&quot;,
     &quot;Python.model.executor&quot;: &quot;Run&quot;,
     &quot;Python.model_run.executor&quot;: &quot;Run&quot;,
@@ -57,7 +69,7 @@
     &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Usuario/Desktop/Localisimo/Advanced Simulation/Advanced-Simulation-Assignments/Assignment 2/Celia - EPA133a-G16-A2/data&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Usuario/Desktop/Localisimo/Advanced Simulation/Advanced-Simulation-Assignments/Celia&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
@@ -74,17 +86,73 @@
 }</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Celia" />
       <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 2\Celia - EPA133a-G16-A2\data" />
       <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 2\Celia - EPA133a-G16-A2\model\celia_model_rachel" />
       <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 2\Celia - EPA133a-G16-A2\model" />
       <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 2\Celia - EPA133a-G16-A2\data\processed" />
-      <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 2" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Celia" />
+      <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 3" />
       <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 2\EPA133a-G16-A2 FINAL" />
       <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 2\EPA133a-G16-A2 FINAL\data\raw" />
       <recent name="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Assignment 2\Celia - EPA133a-G16-A2\data" />
     </key>
+  </component>
+  <component name="RunManager" selected="Python.Test NetworkX">
+    <configuration name="Test NetworkX (1)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="Advanced-Simulation-Assignments" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Celia" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Celia/Test NetworkX.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="Test NetworkX" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="Advanced-Simulation-Assignments" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Assignment 3" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="C:\Users\Usuario\Desktop\Localisimo\Advanced Simulation\Advanced-Simulation-Assignments\Celia\Test NetworkX.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Python.Test NetworkX (1)" />
+        <item itemvalue="Python.Test NetworkX" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
@@ -110,7 +178,12 @@
       <workItem from="1741011413421" duration="5835000" />
       <workItem from="1741025801450" duration="11790000" />
       <workItem from="1741274455575" duration="10586000" />
-      <workItem from="1741349515390" duration="1252000" />
+      <workItem from="1741349515390" duration="1463000" />
+      <workItem from="1741613435288" duration="131000" />
+      <workItem from="1741613584314" duration="1426000" />
+      <workItem from="1741776205921" duration="1513000" />
+      <workItem from="1741937854906" duration="9582000" />
+      <workItem from="1742023393896" duration="323000" />
     </task>
     <task id="LOCAL-00001" summary="move commit test">
       <option name="closed" value="true" />
@@ -208,7 +281,15 @@
       <option name="project" value="LOCAL" />
       <updated>1741285577273</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="Added reference to the printed function and location or merged_scenarios_summary.csv">
+      <option name="closed" value="true" />
+      <created>1741350814148</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1741350814148</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -236,15 +317,18 @@
     <MESSAGE value="General README file, update. Added new structure and notebook reference" />
     <MESSAGE value="Runned the code: got all 9 scenario files in experiment folder. &#10;&#10;Visualisation now is an .py instead of notebook. It outputboxplot2.png&#10;&#10;Added Requirements (check if it is in correct format" />
     <MESSAGE value="Exploring file deleted. &#10;Small mistake fixed in visualisation.py" />
-    <option name="LAST_COMMIT_MESSAGE" value="Exploring file deleted. &#10;Small mistake fixed in visualisation.py" />
+    <MESSAGE value="Added reference to the printed function and location or merged_scenarios_summary.csv" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added reference to the printed function and location or merged_scenarios_summary.csv" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$model.coverage" NAME="model Coverage Results" MODIFIED="1740944838060" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Assignment 2/Celia - EPA133a-G16-A2/model" />
+    <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$model.coverage" NAME="model Coverage Results" MODIFIED="1741947962293" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Celia/model" />
     <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$model_run.coverage" NAME="model_run Coverage Results" MODIFIED="1741281616470" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model" />
     <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$components.coverage" NAME="components Coverage Results" MODIFIED="1740943455372" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Assignment 2/Celia - EPA133a-G16-A2/model" />
+    <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$Test_NetworkX__1_.coverage" NAME="Test NetworkX (1) Coverage Results" MODIFIED="1741947940020" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Celia" />
     <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$visualisation.coverage" NAME="visualisation Coverage Results" MODIFIED="1741285930575" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model" />
+    <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$Test_NetworkX.coverage" NAME="Test NetworkX Coverage Results" MODIFIED="1741613767132" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Assignment 3" />
     <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$visualisation2.coverage" NAME="visualisation2 Coverage Results" MODIFIED="1741284410661" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2 FINAL/model" />
     <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$components_Celia.coverage" NAME="components_Celia Coverage Results" MODIFIED="1740754353310" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Assignment 2/EPA133a-G16-A2_datacleaning/model" />
-    <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$model_viz.coverage" NAME="model_viz Coverage Results" MODIFIED="1740837230150" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Assignment 2/Celia - EPA133a-G16-A2/model" />
+    <SUITE FILE_PATH="coverage/Advanced_Simulation_Assignments$model_viz.coverage" NAME="model_viz Coverage Results" MODIFIED="1741947967670" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Celia/model" />
   </component>
 </project>
\ No newline at end of file
Index: Celia/model/components.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/model/components.py b/Celia/model/components.py
new file mode 100644
--- /dev/null	(date 1741937908527)
+++ b/Celia/model/components.py	(date 1741937908527)
@@ -0,0 +1,308 @@
+from mesa import Agent
+from enum import Enum
+
+
+# ---------------------------------------------------------------
+class Infra(Agent):
+    """
+    Base class for all infrastructure components
+
+    Attributes
+    __________
+    vehicle_count : int
+        the number of vehicles that are currently in/on (or totally generated/removed by)
+        this infrastructure component
+
+    length : float
+        the length in meters
+    ...
+
+    """
+
+    def __init__(self, unique_id, model, length=0,
+                 name='Unknown', road_name='Unknown'):
+        super().__init__(unique_id, model)
+        self.length = length
+        self.name = name
+        self.road_name = road_name
+        self.vehicle_count = 0
+
+    def step(self):
+        pass
+
+    def __str__(self):
+        return type(self).__name__ + str(self.unique_id)
+
+
+# ---------------------------------------------------------------
+class Bridge(Infra):
+    """
+    Creates delay time
+
+    Attributes
+    __________
+    condition:
+        condition of the bridge
+
+    delay_time: int
+        the delay (in ticks) caused by this bridge
+    ...
+
+    """
+
+    def __init__(self, unique_id, model, length=0,
+                 name='Unknown', road_name='Unknown', condition='Unknown'):
+        super().__init__(unique_id, model, length, name, road_name)
+
+        self.condition = condition
+
+        # TODO
+        self.delay_time = self.random.randrange(0, 10)
+        # print(self.delay_time)
+
+    # TODO
+    def get_delay_time(self):
+        return self.delay_time
+
+
+# ---------------------------------------------------------------
+class Link(Infra):
+    pass
+
+
+# ---------------------------------------------------------------
+class Intersection(Infra):
+    pass
+
+
+# ---------------------------------------------------------------
+class Sink(Infra):
+    """
+    Sink removes vehicles
+
+    Attributes
+    __________
+    vehicle_removed_toggle: bool
+        toggles each time when a vehicle is removed
+    ...
+
+    """
+    vehicle_removed_toggle = False
+
+    def remove(self, vehicle):
+        self.model.schedule.remove(vehicle)
+        self.vehicle_removed_toggle = not self.vehicle_removed_toggle
+        print(str(self) + ' REMOVE ' + str(vehicle))
+
+
+# ---------------------------------------------------------------
+
+class Source(Infra):
+    """
+    Source generates vehicles
+
+    Class Attributes:
+    -----------------
+    truck_counter : int
+        the number of trucks generated by ALL sources. Used as Truck ID!
+
+    Attributes
+    __________
+    generation_frequency: int
+        the frequency (the number of ticks) by which a truck is generated
+
+    vehicle_generated_flag: bool
+        True when a Truck is generated in this tick; False otherwise
+    ...
+
+    """
+
+    truck_counter = 0
+    generation_frequency = 5
+    vehicle_generated_flag = False
+
+    def step(self):
+        if self.model.schedule.steps % self.generation_frequency == 0:
+            self.generate_truck()
+        else:
+            self.vehicle_generated_flag = False
+
+    def generate_truck(self):
+        """
+        Generates a truck, sets its path, increases the global and local counters
+        """
+        try:
+            agent = Vehicle('Truck' + str(Source.truck_counter), self.model, self)
+            if agent:
+                self.model.schedule.add(agent)
+                agent.set_path()
+                Source.truck_counter += 1
+                self.vehicle_count += 1
+                self.vehicle_generated_flag = True
+                print(str(self) + " GENERATE " + str(agent))
+        except Exception as e:
+            print("Oops!", e.__class__, "occurred.")
+
+
+# ---------------------------------------------------------------
+class SourceSink(Source, Sink):
+    """
+    Generates and removes trucks
+    """
+    pass
+
+
+# ---------------------------------------------------------------
+class Vehicle(Agent):
+    """
+
+    Attributes
+    __________
+    speed: float
+        speed in meter per minute (m/min)
+
+    step_time: int
+        the number of minutes (or seconds) a tick represents
+        Used as a base to change unites
+
+    state: Enum (DRIVE | WAIT)
+        state of the vehicle
+
+    location: Infra
+        reference to the Infra where the vehicle is located
+
+    location_offset: float
+        the location offset in meters relative to the starting point of
+        the Infra, which has a certain length
+        i.e. location_offset < length
+
+    path_ids: Series
+        the whole path (origin and destination) where the vehicle shall drive
+        It consists the Infras' uniques IDs in a sequential order
+
+    location_index: int
+        a pointer to the current Infra in "path_ids" (above)
+        i.e. the id of self.location is self.path_ids[self.location_index]
+
+    waiting_time: int
+        the time the vehicle needs to wait
+
+    generated_at_step: int
+        the timestamp (number of ticks) that the vehicle is generated
+
+    removed_at_step: int
+        the timestamp (number of ticks) that the vehicle is removed
+    ...
+
+    """
+
+    # 48 km/h translated into meter per min
+    speed = 48 * 1000 / 60
+    # One tick represents 1 minute
+    step_time = 1
+
+    class State(Enum):
+        DRIVE = 1
+        WAIT = 2
+
+    def __init__(self, unique_id, model, generated_by,
+                 location_offset=0, path_ids=None):
+        super().__init__(unique_id, model)
+        self.generated_by = generated_by
+        self.generated_at_step = model.schedule.steps
+        self.location = generated_by
+        self.location_offset = location_offset
+        self.pos = generated_by.pos
+        self.path_ids = path_ids
+        # default values
+        self.state = Vehicle.State.DRIVE
+        self.location_index = 0
+        self.waiting_time = 0
+        self.waited_at = None
+        self.removed_at_step = None
+
+    def __str__(self):
+        return "Vehicle" + str(self.unique_id) + \
+               " +" + str(self.generated_at_step) + " -" + str(self.removed_at_step) + \
+               " " + str(self.state) + '(' + str(self.waiting_time) + ') ' + \
+               str(self.location) + '(' + str(self.location.vehicle_count) + ') ' + str(self.location_offset)
+
+    def set_path(self):
+        """
+        Set the origin destination path of the vehicle
+        """
+        self.path_ids = self.model.get_route(self.generated_by.unique_id)
+
+    def step(self):
+        """
+        Vehicle waits or drives at each step
+        """
+        if self.state == Vehicle.State.WAIT:
+            self.waiting_time = max(self.waiting_time - 1, 0)
+            if self.waiting_time == 0:
+                self.waited_at = self.location
+                self.state = Vehicle.State.DRIVE
+
+        if self.state == Vehicle.State.DRIVE:
+            self.drive()
+
+        """
+        To print the vehicle trajectory at each step
+        """
+        print(self)
+
+    def drive(self):
+
+        # the distance that vehicle drives in a tick
+        # speed is global now: can change to instance object when individual speed is needed
+        distance = Vehicle.speed * Vehicle.step_time
+        distance_rest = self.location_offset + distance - self.location.length
+
+        if distance_rest > 0:
+            # go to the next object
+            self.drive_to_next(distance_rest)
+        else:
+            # remain on the same object
+            self.location_offset += distance
+
+    def drive_to_next(self, distance):
+        """
+        vehicle shall move to the next object with the given distance
+        """
+
+        self.location_index += 1
+        next_id = self.path_ids[self.location_index]
+        next_infra = self.model.schedule._agents[next_id]  # Access to protected member _agents
+
+        if isinstance(next_infra, Sink):
+            # arrive at the sink
+            self.arrive_at_next(next_infra, 0)
+            self.removed_at_step = self.model.schedule.steps
+            self.location.remove(self)
+            return
+        elif isinstance(next_infra, Bridge):
+            self.waiting_time = next_infra.get_delay_time()
+            if self.waiting_time > 0:
+                # arrive at the bridge and wait
+                self.arrive_at_next(next_infra, 0)
+                self.state = Vehicle.State.WAIT
+                return
+            # else, continue driving
+
+        if next_infra.length > distance:
+            # stay on this object:
+            self.arrive_at_next(next_infra, distance)
+        else:
+            # drive to next object:
+            self.drive_to_next(distance - next_infra.length)
+
+    def arrive_at_next(self, next_infra, location_offset):
+        """
+        Arrive at next_infra with the given location_offset
+        """
+        self.location.vehicle_count -= 1
+        self.location = next_infra
+        self.location_offset = location_offset
+        self.location.vehicle_count += 1
+
+# EOF -----------------------------------------------------------
Index: Celia/model/ContinuousSpace/simple_continuous_canvas.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/model/ContinuousSpace/simple_continuous_canvas.js b/Celia/model/ContinuousSpace/simple_continuous_canvas.js
new file mode 100644
--- /dev/null	(date 1741937908523)
+++ b/Celia/model/ContinuousSpace/simple_continuous_canvas.js	(date 1741937908523)
@@ -0,0 +1,119 @@
+var ContinuousVisualization = function (height, width, context) {
+  var height = height;
+  var width = width;
+  var context = context;
+
+  this.draw = function (objects) {
+    for (var i in objects) {
+      var p = objects[i];
+      if (p.Shape == "rect") this.drawRectangle(p.x, p.y, p.w, p.h, p.Color, p.Filled, p.Text, p.Text_color);
+      if (p.Shape == "circle") this.drawCircle(p.x, p.y, p.r, p.Color, p.Filled, p.Text, p.Text_color);
+    }
+  };
+
+  this.drawCircle = function (x, y, radius, color, fill, text, text_color) {
+    var cx = x * width;
+    var cy = y * height;
+    var r = radius;
+
+    context.beginPath();
+    context.arc(cx, cy, r, 0, Math.PI * 2, false);
+    context.closePath();
+
+    context.strokeStyle = color;
+    context.stroke();
+
+    if (fill) {
+      context.fillStyle = color;
+      context.fill();
+    }
+
+    // This part draws the text inside the Circle
+    if (text !== undefined) {
+      context.fillStyle = text_color;
+      context.textAlign = "center";
+      context.textBaseline = "middle";
+      context.fillText(text, cx, cy);
+    }
+  };
+
+  this.drawRectangle = function (x, y, w, h, color, fill, text, text_color) {
+    var cx = x * width;
+    var cy = y * height;
+    var dx = w;
+    var dy = h;
+
+    // Keep the drawing centered:
+    var x0 = cx - dx * 0.5;
+    var y0 = cy - dy * 0.5;
+
+    context.beginPath();
+    context.strokeStyle = color;
+    context.fillStyle = color;
+
+    if (fill) context.fillRect(x0, y0, dx, dy);
+    else context.strokeRect(x0, y0, dx, dy);
+
+    // This part draws the text inside the Rectangle
+    if (text !== undefined) {
+      context.fillStyle = text_color;
+      context.textAlign = "center";
+      context.textBaseline = "middle";
+      context.fillText(text, cx, cy);
+    }
+  };
+
+  this.resetCanvas = function () {
+    context.clearRect(0, 0, height, width);
+    context.beginPath();
+  };
+};
+
+var Simple_Continuous_Module = function (canvas_width, canvas_height) {
+  // Create the element
+  // ------------------
+
+  // ORIGINAL CODE:
+  // // Create the tag:
+  // var canvas_tag = "<canvas width='" + canvas_width + "' height='" + canvas_height + "' ";
+  // canvas_tag += "style='border:1px dotted'></canvas>";
+  // var parent_div_tag = '<div id="parent" style="height:' + canvas_height + 'px;" class="world-grid-parent" target="_sim"></div>'
+  // // Append it to body:
+  // var canvas = $(canvas_tag)[0];
+  // var parent = $(parent_div_tag)[0];
+  // //$("body").append(canvas);
+  // $("#elements").append(parent);
+  // parent.append(canvas);
+
+  // FIXED CODE (If you are getting Javascript '$ not defined' error)
+  // Create Canvas object
+  const canvas = document.createElement("canvas");
+  canvas.setAttribute("width", canvas_width);
+  canvas.setAttribute("height", canvas_height);
+  canvas.setAttribute("style", "border:1px dotted");
+
+  // Create Parent object
+  const parent_div = document.createElement("div");
+  let parent_style = "height:" + canvas_height + "px;";
+  parent_div.setAttribute("style", parent_style);
+  parent_div.setAttribute("class", "world-grid-parent");
+  parent_div.setAttribute("target", "_sim");
+
+  // Add both to document
+  let elements_div = document.getElementById("elements");
+  elements_div.appendChild(parent_div);
+  parent_div.appendChild(canvas);
+
+  // Create the context and the drawing controller:
+  var context = canvas.getContext("2d");
+  var canvasDraw = new ContinuousVisualization(canvas_width, canvas_height, context);
+
+  this.render = function (data) {
+    canvasDraw.resetCanvas();
+    canvasDraw.draw(data);
+  };
+
+  this.reset = function () {
+    canvasDraw.resetCanvas();
+  };
+};
Index: Celia/model/ContinuousSpace/SimpleContinuousModule.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/model/ContinuousSpace/SimpleContinuousModule.py b/Celia/model/ContinuousSpace/SimpleContinuousModule.py
new file mode 100644
--- /dev/null	(date 1741937908521)
+++ b/Celia/model/ContinuousSpace/SimpleContinuousModule.py	(date 1741937908521)
@@ -0,0 +1,30 @@
+from mesa.visualization.ModularVisualization import VisualizationElement
+
+
+class SimpleCanvas(VisualizationElement):
+    local_includes = ["ContinuousSpace/simple_continuous_canvas.js"]
+
+    def __init__(self, portrayal_method=None, canvas_width=500, canvas_height=500):
+        """
+        Instantiate a new SimpleCanvas
+        """
+        self.portrayal_method = portrayal_method
+        self.canvas_height = canvas_height
+        self.canvas_width = canvas_width
+        new_element = ("new Simple_Continuous_Module({}, {})".
+                       format(self.canvas_width, self.canvas_height))
+        self.js_code = "elements.push(" + new_element + ");"
+
+    def render(self, model):
+        space_state = []
+        for obj in model.schedule.agents:
+            portrayal = self.portrayal_method(obj)
+            x, y = obj.pos
+            x = ((x - model.space.x_min) /
+                 (model.space.x_max - model.space.x_min))
+            y = ((y - model.space.y_min) /
+                 (model.space.y_max - model.space.y_min))
+            portrayal["x"] = x
+            portrayal["y"] = y
+            space_state.append(portrayal)
+        return space_state
Index: Celia/testNetworkX.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/testNetworkX.ipynb b/Celia/testNetworkX.ipynb
new file mode 100644
--- /dev/null	(date 1741950145544)
+++ b/Celia/testNetworkX.ipynb	(date 1741950145544)
@@ -0,0 +1,95 @@
+#%%
+import networkx as nx
+import matplotlib.pyplot as plt
+import pandas as pd
+#%%
+df = pd.read_csv('data/demo-4.csv')
+#%%
+print(df.head())
+#%% md
+# Create a graph with nodes as bridges or sourcesinks
+#%% md
+First, I try to add them with the position manually
+#%%
+if __name__ == '__main__':
+    G = nx.Graph()
+    G.add_node(1000000, pos=(df['lat'][0], df['lon'][0]))
+    G.add_node(1000002, pos=(df['lat'][2], df['lon'][2]))
+    G.add_node(1000004, pos=(df['lat'][4], df['lon'][4]))
+
+    pos = nx.get_node_attributes(G, 'pos')
+    nx.draw(G, pos, with_labels=True)
+    plt.show()
+#%% md
+Now, I add the nodes (sourcesinks and bridges) with a loop
+#%%
+if __name__ == '__main__':
+    G = nx.Graph()
+
+    #create the nodes; bridge=node, sourcesink=node
+    for i in range(len(df)):
+        if df['model_type'][i]=='bridge':
+            G.add_node(df['id'][i], pos=(df['lat'][i], df['lon'][i]))
+
+        if df['model_type'][i]=='sourcesink':
+            G.add_node(df['id'][i], pos=(df['lat'][i], df['lon'][i]))
+
+    pos = nx.get_node_attributes(G, 'pos')
+    nx.draw(G, pos, with_labels=True)
+    plt.show()
+
+#%%
+if __name__ == '__main__':
+    G = nx.Graph()
+    #G.add_node(1)
+
+    #create the nodes; bridge=node, sourcesink=node
+    for i in range(len(df)):
+        if df['model_type'][i]!='link':
+            G.add_node(df['id'][i],pos=(df['lat'][i], df['lon'][i]))
+    pos = nx.get_node_attributes(G, 'pos')
+    nx.draw(G, pos, with_labels=True)
+
+
+    plt.show()
+#%% md
+# Add edges- the links- to the graph
+#%%
+if __name__ == '__main__':
+    G = nx.Graph()
+    #G.add_node(1)
+
+    #create the nodes; bridge=node, sourcesink=node
+    for i in range(len(df)):
+        if df['model_type'][i] != 'link':
+            G.add_node(df['id'][i],pos=(df['lat'][i], df['lon'][i]))
+    #G.add_weighted_edges_from([(1000000, 1000002, 1500)], weight='length')
+
+    pos = nx.get_node_attributes(G, 'pos')
+    nx.draw(G, pos, with_labels=True)
+    #labels = nx.get_edge_attributes(G, 'weight')
+    #nx.draw_networkx_edge_labels(G, pos, edge_labels=labels)
+
+
+
+    plt.show()
+
+#%%
+if __name__ == '__main__':
+    G = nx.DiGraph()
+    #G.add_node(1)
+
+    #create the nodes; bridge=node, sourcesink=node
+    for i in range(len(df)):
+        if df['model_type'][i]=='bridge':
+            G.add_node(df['id'][i])
+
+        if df['model_type'][i]=='sourcesink':
+            G.add_node(df['id'][i])
+
+    #create the edges
+    for i in range(2,14,2):
+            G.add_edge(df['id'][i-1], df['id'][i+1])
+
+    nx.draw(G, with_labels=True)
+    plt.show()
\ No newline at end of file
Index: Celia/data/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/data/README.md b/Celia/data/README.md
new file mode 100644
--- /dev/null	(date 1741937908507)
+++ b/Celia/data/README.md	(date 1741937908507)
@@ -0,0 +1,36 @@
+# Data for Model Generation of Simple Transport Model Demo in MESA
+
+Created by:
+Yilin HUANG
+
+Email:
+y.huang@tudelft.nl
+
+Version:
+1.1
+
+## Introduction
+
+The simple transport model demo, see [../model/model.py](../model/model.py) for EPA133a Advanced Simulation course Assignment 3, takes a `csv` input data file that specifies the infrastructure model components to be generated. The data format used **by the demo model** is described here.
+
+## Format
+
+|     Column | Description                                              |
+| ---------: | :------------------------------------------------------- |
+|       road | On which road does the component belong to               |
+|         id | **Unique ID** of the component                           |
+| model_type | Type (i.e. class) of the model component to be generated |
+|       name | Name of the object                                       |
+|        lat | Latitude in Decimal Degrees                              |
+|        lon | Longitude in Decimal Degrees                             |
+|     length | Length of the object in meters                           |
+
+The column `road` is used by the model generation to classify model components by roads, i.e., on which road does a component belong to. The model generation assumes that the infrastructure model components of the same road is ordered sequentially. This means, e.g. in `demo-4.csv`, component `1000000` is connected to component `1000001`, that is connected to component `1000002`, that is connected to component `1000003`, etc., all of which are on road `N1`. Similarity, component `1000013` is connected to component `1000014`, that is connected to component `1000015`, etc., all of which are on road `N2`. Each model component has a unique id according to which the Mesa model is generated. Note that the same `intersection` component that connect different roads would have the same id.
+
+The column `model_type` is used by the model generation to identify which class of components to be generated. The `model_type` labels used in this column must be consistent with the labels in the `generate_model` routine.
+
+The rest of the information is used to instantiate the components (objects).
+
+You may change the data format and structure if the model generation (`generate_model`) routine is adapted accordingly.
+
+All data files contained in this directory are used as demonstration for model generation. They are not based on real data.
Index: Celia/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/README.md b/Celia/README.md
new file mode 100644
--- /dev/null	(date 1741937908505)
+++ b/Celia/README.md	(date 1741937908505)
@@ -0,0 +1,24 @@
+# Example README File
+
+Created by: EPA133a Group xx
+
+|    Name     | Student Number |
+| :---------: | :------------- |
+| Mary White  | 1234567        |
+| David Brown | 7654321        |
+
+## Introduction
+
+Every project should have a README file to help a first-time user understand what it is about and how they might be able to use it. This file is where you (as a group) shall provide the information needed by the TAs to evaluate and grade your work.
+
+If you are looking for information about the Demo model of Assignment 3, navigate to the [model/README.md](model/README.md) in the [model](model) directory. Have **fun** modeling in Python!
+
+## How to Use
+
+Include whatever you think is necessary for someone to understand your work. The README file is usually the first file someone will see and open. It doesn't need to explain what might be obvious, but it should point out the most important things for someone looking at your work. For example, how to launch your program, what are the main files, where to find them, etc.
+
+### Format
+
+Most README files for data or software projects are now written in Markdown format, like this document. There are some different flavours, but they are easy to write. See here for more information https://www.markdownguide.org/basic-syntax
+
+Most IDEs can render Markdown files directly.
Index: Celia/data/demo-4.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/data/demo-4.csv b/Celia/data/demo-4.csv
new file mode 100644
--- /dev/null	(date 1741937908509)
+++ b/Celia/data/demo-4.csv	(date 1741937908509)
@@ -0,0 +1,27 @@
+road,id,model_type,condition,name,lat,lon,length
+N1,1000000,sourcesink,,SoSi1,0,0,4
+N1,1000001,link ,NaN,,1,1,1800
+N1,1000002,bridge ,A,,2,2,200
+N1,1000003,link,NaN,,3,3,1500
+N1,1000004,bridge,A,,4,4,8
+N1,1000005,link,NaN,,5,5,2000
+N1,1000006,intersection,NaN,,6,6,20
+N1,1000007,link,NaN,,7,7,1400
+N1,1000008,bridge,A,,8,8,4
+N1,1000009,link,NaN,,9,9,2500
+N1,1000010,bridge,B,,10,10,500
+N1,1000011,link,NaN,,11,11,800
+N1,1000012,sourcesink,,SoSi2,12,12,20
+N2,1000013,sourcesink,,SoSi3,0,12,4
+N2,1000014,link ,NaN,,1,11,1800
+N2,1000015,bridge ,A,,2,10,200
+N2,1000016,link,NaN,,3,9,1500
+N2,1000017,bridge,A,,4,8,8
+N2,1000018,link,NaN,,5,7,2000
+N2,1000006,intersection,NaN,,6,6,20
+N2,1000020,link,NaN,,7,5,1400
+N2,1000021,bridge,A,,8,4,4
+N2,1000022,link,NaN,,9,3,2500
+N2,1000023,bridge,B,,10,2,500
+N2,1000024,link,NaN,,11,1,800
+N2,1000025,sourcesink,,SoSi4,12,0,20
\ No newline at end of file
Index: Celia/model/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/model/README.md b/Celia/model/README.md
new file mode 100644
--- /dev/null	(date 1741937908524)
+++ b/Celia/model/README.md	(date 1741937908524)
@@ -0,0 +1,78 @@
+# Simple Transport Model Demo in MESA
+
+Created by:
+Yilin HUANG
+
+Email:
+y.huang@tudelft.nl
+
+Version:
+1.1
+
+## Introduction
+
+A simple transport model demo in MESA for EPA133a Advanced Simulation course Assignment 3.
+
+## How to Use
+
+- Create and activate a virtual environment
+
+In PyCharm, you can create a virtual environment by following the steps below:
+
+    1. Open the project in PyCharm
+    2. Go to Settings -> Project: epa133a -> Python Interpreter
+    3. Click "Add Interpreter"
+    4. Select "Add Local Interpreter"
+    5. Select Virtualenv Environment
+    6. Select New environment
+    7. Select Base interpreter as Python 3.11
+    8. Click OK and also close the settings with OK
+
+Afterwards, you should see "Python 3.11" (epa133a) in the bottom-right corner of the PyCharm window.
+To install the requirements, open a terminal/command line window in PyCharm and type:
+
+```
+    $ pip install -r requirements.txt
+```
+
+- Launch the simulation model with visualization
+
+```
+    $ python model_viz.py
+```
+
+- Launch the simulation model without visualization
+
+```
+    $ python model_run.py
+```
+
+## Files
+
+- [model.py](model.py): Contains the model `BangladeshModel` which is a subclass of Mesa `Model`. It reads a `csv` file with specific format for (transport) model generation. (See the README in the `data` directory for data format.) In addition to dynamic behavior, each model component instance (i.e., object) also has geo-location variables, i.e. latitude and longitude in Decimal Degrees (DD). The given bounds of the latitude and longitude of all objects are translated into the bounds of the HTML5 canvas, which is used in case the visualization is launched.
+
+  In this file, you modify the model generation and add your own routines.
+
+- [components.py](components.py): Contains the model component definitions for the (main) model. Check the file carefully to see which components are already defined.
+
+  In this file, you modify and add your own components.
+
+- [model_viz.py](model_viz.py): Sets up the visualization; uses the `SimpleCanvas` element defined. Calls the model. Run the visualization server.
+
+  In this file, you define simple visualization.
+
+- [model_run.py](model_run.py): Sets up the model run (conditions). Calls the model. Run the simulation without visualization.
+
+  In this file, you define model batch runs.
+
+- [ContinuousSpace](ContinuousSpace): The directory contains files needed to visualize Python3 Mesa models on a continuous canvas with geo-coordinates, a functionality not contained in the current Mesa package.
+
+  Editing files in this directory is NOT recommended for our assignment.
+
+- [ContinuousSpace/SimpleContinuousModule.py](ContinuousSpace/SimpleContinuousModule.py): Defines `SimpleCanvas`, the Python side of a custom visualization module for drawing objects with continuous positions. This is a slight adaptation of the Flocker example provided by the Mesa project.
+
+  Editing this file is NOT recommended for our assignment.
+
+- [ContinuousSpace/simple_continuous_canvas.js](ContinuousSpace/simple_continuous_canvas.js): JavaScript side of the `SimpleCanvas` visualization module. It takes the output generated by the Python `SimpleCanvas` element and draws it in the browser window via HTML5 canvas. It can draw circles and rectangles. Both can have text annotation. This file is an adaptation of the Flocker example provided by the Mesa project.
+
+  Editing this file is NOT recommended for our assignment.
Index: Celia/model/model.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Celia/model/model.py b/Celia/model/model.py
new file mode 100644
--- /dev/null	(date 1741948344113)
+++ b/Celia/model/model.py	(date 1741948344113)
@@ -0,0 +1,188 @@
+from mesa import Model
+from mesa.time import BaseScheduler
+from mesa.space import ContinuousSpace
+from components import Source, Sink, SourceSink, Bridge, Link, Intersection
+import pandas as pd
+from collections import defaultdict
+import NetworkX as nx
+
+
+# ---------------------------------------------------------------
+def set_lat_lon_bound(lat_min, lat_max, lon_min, lon_max, edge_ratio=0.02):
+    """
+    Set the HTML continuous space canvas bounding box (for visualization)
+    give the min and max latitudes and Longitudes in Decimal Degrees (DD)
+
+    Add white borders at edges (default 2%) of the bounding box
+    """
+
+    lat_edge = (lat_max - lat_min) * edge_ratio
+    lon_edge = (lon_max - lon_min) * edge_ratio
+
+    x_max = lon_max + lon_edge
+    y_max = lat_min - lat_edge
+    x_min = lon_min - lon_edge
+    y_min = lat_max + lat_edge
+    return y_min, y_max, x_min, x_max
+
+
+# ---------------------------------------------------------------
+class BangladeshModel(Model):
+    """
+    The main (top-level) simulation model
+
+    One tick represents one minute; this can be changed
+    but the distance calculation need to be adapted accordingly
+
+    Class Attributes:
+    -----------------
+    step_time: int
+        step_time = 1 # 1 step is 1 min
+
+    path_ids_dict: defaultdict
+        Key: (origin, destination)
+        Value: the shortest path (Infra component IDs) from an origin to a destination
+
+        Only straight paths in the Demo are added into the dict;
+        when there is a more complex network layout, the paths need to be managed differently
+
+    sources: list
+        all sources in the network
+
+    sinks: list
+        all sinks in the network
+
+    """
+
+    step_time = 1
+
+    file_name = '../data/demo-4.csv'
+
+    def __init__(self, seed=None, x_max=500, y_max=500, x_min=0, y_min=0):
+
+        self.schedule = BaseScheduler(self)
+        self.running = True
+        self.path_ids_dict = defaultdict(lambda: pd.Series())
+        self.space = None
+        self.sources = []
+        self.sinks = []
+
+        self.generate_model()
+
+    def generate_model(self):
+        """
+        generate the simulation model according to the csv file component information
+
+        Warning: the labels are the same as the csv column labels
+        """
+
+        df = pd.read_csv(self.file_name)
+
+        # a list of names of roads to be generated
+        # TODO You can also read in the road column to generate this list automatically
+        roads = ['N1', 'N2']
+
+        df_objects_all = []
+        for road in roads:
+            # Select all the objects on a particular road in the original order as in the cvs
+            df_objects_on_road = df[df['road'] == road]
+
+            if not df_objects_on_road.empty:
+                df_objects_all.append(df_objects_on_road)
+
+                """
+                Set the path 
+                1. get the serie of object IDs on a given road in the cvs in the original order
+                2. add the (straight) path to the path_ids_dict
+                3. put the path in reversed order and reindex
+                4. add the path to the path_ids_dict so that the vehicles can drive backwards too
+                """
+                path_ids = df_objects_on_road['id']
+                path_ids.reset_index(inplace=True, drop=True)
+                self.path_ids_dict[path_ids[0], path_ids.iloc[-1]] = path_ids
+                self.path_ids_dict[path_ids[0], None] = path_ids
+                path_ids = path_ids[::-1]
+                path_ids.reset_index(inplace=True, drop=True)
+                self.path_ids_dict[path_ids[0], path_ids.iloc[-1]] = path_ids
+                self.path_ids_dict[path_ids[0], None] = path_ids
+
+        # put back to df with selected roads so that min and max and be easily calculated
+        df = pd.concat(df_objects_all)
+        y_min, y_max, x_min, x_max = set_lat_lon_bound(
+            df['lat'].min(),
+            df['lat'].max(),
+            df['lon'].min(),
+            df['lon'].max(),
+            0.05
+        )
+
+        # ContinuousSpace from the Mesa package;
+        # not to be confused with the SimpleContinuousModule visualization
+        self.space = ContinuousSpace(x_max, y_max, True, x_min, y_min)
+
+        for df in df_objects_all:
+            for _, row in df.iterrows():  # index, row in ...
+
+                # create agents according to model_type
+                model_type = row['model_type'].strip()
+                agent = None
+
+                name = row['name']
+                if pd.isna(name):
+                    name = ""
+                else:
+                    name = name.strip()
+
+                if model_type == 'source':
+                    agent = Source(row['id'], self, row['length'], name, row['road'])
+                    self.sources.append(agent.unique_id)
+                elif model_type == 'sink':
+                    agent = Sink(row['id'], self, row['length'], name, row['road'])
+                    self.sinks.append(agent.unique_id)
+                elif model_type == 'sourcesink':
+                    agent = SourceSink(row['id'], self, row['length'], name, row['road'])
+                    self.sources.append(agent.unique_id)
+                    self.sinks.append(agent.unique_id)
+                elif model_type == 'bridge':
+                    agent = Bridge(row['id'], self, row['length'], name, row['road'], row['condition'])
+                elif model_type == 'link':
+                    agent = Link(row['id'], self, row['length'], name, row['road'])
+                elif model_type == 'intersection':
+                    if not row['id'] in self.schedule._agents:
+                        agent = Intersection(row['id'], self, row['length'], name, row['road'])
+
+                if agent:
+                    self.schedule.add(agent)
+                    y = row['lat']
+                    x = row['lon']
+                    self.space.place_agent(agent, (x, y))
+                    agent.pos = (x, y)
+
+    def get_random_route(self, source):
+        """
+        pick up a random route given an origin
+        """
+        while True:
+            # different source and sink
+            sink = self.random.choice(self.sinks)
+            if sink is not source:
+                break
+        return self.path_ids_dict[source, sink]
+
+    # TODO
+    def get_route(self, source):
+        return self.get_straight_route(source)
+
+    def get_straight_route(self, source):
+        """
+        pick up a straight route given an origin
+        """
+        return self.path_ids_dict[source, None]
+
+    def step(self):
+        """
+        Advance the simulation by one step.
+        """
+        self.schedule.step()
+
+# EOF -----------------------------------------------------------
